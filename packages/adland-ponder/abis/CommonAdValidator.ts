export const commonAdValidatorAbi = [
  {
    type: "constructor",
    inputs: [{ name: "_eas", internalType: "contract IEAS", type: "address" }],
    stateMutability: "nonpayable",
  },
  { type: "receive", stateMutability: "payable" },
  {
    type: "function",
    inputs: [
      {
        name: "attestation",
        internalType: "struct Attestation",
        type: "tuple",
        components: [
          { name: "uid", internalType: "bytes32", type: "bytes32" },
          { name: "schema", internalType: "bytes32", type: "bytes32" },
          { name: "time", internalType: "uint64", type: "uint64" },
          { name: "expirationTime", internalType: "uint64", type: "uint64" },
          { name: "revocationTime", internalType: "uint64", type: "uint64" },
          { name: "refUID", internalType: "bytes32", type: "bytes32" },
          { name: "recipient", internalType: "address", type: "address" },
          { name: "attester", internalType: "address", type: "address" },
          { name: "revocable", internalType: "bool", type: "bool" },
          { name: "data", internalType: "bytes", type: "bytes" },
        ],
      },
    ],
    name: "attest",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "payable",
  },
  {
    type: "function",
    inputs: [],
    name: "commonAdSpaces",
    outputs: [
      { name: "", internalType: "contract CommonAdSpaces", type: "address" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "isPayable",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "pure",
  },
  {
    type: "function",
    inputs: [
      {
        name: "attestations",
        internalType: "struct Attestation[]",
        type: "tuple[]",
        components: [
          { name: "uid", internalType: "bytes32", type: "bytes32" },
          { name: "schema", internalType: "bytes32", type: "bytes32" },
          { name: "time", internalType: "uint64", type: "uint64" },
          { name: "expirationTime", internalType: "uint64", type: "uint64" },
          { name: "revocationTime", internalType: "uint64", type: "uint64" },
          { name: "refUID", internalType: "bytes32", type: "bytes32" },
          { name: "recipient", internalType: "address", type: "address" },
          { name: "attester", internalType: "address", type: "address" },
          { name: "revocable", internalType: "bool", type: "bool" },
          { name: "data", internalType: "bytes", type: "bytes" },
        ],
      },
      { name: "values", internalType: "uint256[]", type: "uint256[]" },
    ],
    name: "multiAttest",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "payable",
  },
  {
    type: "function",
    inputs: [
      {
        name: "attestations",
        internalType: "struct Attestation[]",
        type: "tuple[]",
        components: [
          { name: "uid", internalType: "bytes32", type: "bytes32" },
          { name: "schema", internalType: "bytes32", type: "bytes32" },
          { name: "time", internalType: "uint64", type: "uint64" },
          { name: "expirationTime", internalType: "uint64", type: "uint64" },
          { name: "revocationTime", internalType: "uint64", type: "uint64" },
          { name: "refUID", internalType: "bytes32", type: "bytes32" },
          { name: "recipient", internalType: "address", type: "address" },
          { name: "attester", internalType: "address", type: "address" },
          { name: "revocable", internalType: "bool", type: "bool" },
          { name: "data", internalType: "bytes", type: "bytes" },
        ],
      },
      { name: "values", internalType: "uint256[]", type: "uint256[]" },
    ],
    name: "multiRevoke",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "payable",
  },
  {
    type: "function",
    inputs: [],
    name: "owner",
    outputs: [{ name: "", internalType: "address", type: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      {
        name: "attestation",
        internalType: "struct Attestation",
        type: "tuple",
        components: [
          { name: "uid", internalType: "bytes32", type: "bytes32" },
          { name: "schema", internalType: "bytes32", type: "bytes32" },
          { name: "time", internalType: "uint64", type: "uint64" },
          { name: "expirationTime", internalType: "uint64", type: "uint64" },
          { name: "revocationTime", internalType: "uint64", type: "uint64" },
          { name: "refUID", internalType: "bytes32", type: "bytes32" },
          { name: "recipient", internalType: "address", type: "address" },
          { name: "attester", internalType: "address", type: "address" },
          { name: "revocable", internalType: "bool", type: "bool" },
          { name: "data", internalType: "bytes", type: "bytes" },
        ],
      },
    ],
    name: "revoke",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "payable",
  },
  {
    type: "function",
    inputs: [
      {
        name: "_commonAdSpaces",
        internalType: "contract CommonAdSpaces",
        type: "address",
      },
    ],
    name: "setCommonAdSpaces",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [],
    name: "version",
    outputs: [{ name: "", internalType: "string", type: "string" }],
    stateMutability: "view",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "uid", internalType: "bytes32", type: "bytes32", indexed: true },
      {
        name: "adSpaceId",
        internalType: "uint256",
        type: "uint256",
        indexed: true,
      },
      { name: "cid", internalType: "string", type: "string", indexed: false },
    ],
    name: "AttestAd",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "previousOwner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "newOwner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
    ],
    name: "OwnershipTransferred",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "uid", internalType: "bytes32", type: "bytes32", indexed: true },
      {
        name: "adSpaceId",
        internalType: "uint256",
        type: "uint256",
        indexed: true,
      },
      { name: "cid", internalType: "string", type: "string", indexed: false },
    ],
    name: "RevokeAd",
  },
  { type: "error", inputs: [], name: "AccessDenied" },
  { type: "error", inputs: [], name: "InsufficientValue" },
  { type: "error", inputs: [], name: "InvalidEAS" },
  { type: "error", inputs: [], name: "InvalidLength" },
  { type: "error", inputs: [], name: "NotPayable" },
] as const;
